# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""The Admin model"""
type Admin {
  id: ID!
  email: String!
  password: String!
}

input AdminInput {
  email: String!
  password: String!
}

"""The Item model"""
type Item {
  id: ID!
  name: String!
  price: Float!
  description: String!
  category: ItemCategory!
  image: String!
}

"""
An enumeration representing the category of a menu item. Possible values: ENTREE, SALAD, MAIN, DESSERT.
"""
enum ItemCategory {
  ENTREE
  SALAD
  MAIN
  DESSERT
}

input ItemInput {
  name: String!
  description: String!
  price: Float!
  category: ItemCategory!
  image: String!
}

type LoginResponse {
  accessToken: String!
  userId: String!
}

type Mutation {
  createAdmin(data: AdminInput!): Admin!
  deleteAdmin(id: String!): Boolean!
  createItem(data: ItemInput!): Item!
  deleteItem(id: String!): Boolean!
  createStaff(data: StaffInput!): Staff!
  addStaff(password: String!, email: String!, username: String!): Boolean!
  updateStaff(password: String!, email: String!, username: String!): Boolean!
  deleteStaff(id: String!): Boolean!
  createTable(data: TableInput!): Table!
  addTable(description: String!, maxCapacity: Float!, minCapacity: Float!, tableNumber: Float!): Boolean!
  updateTable(description: String!, maxCapacity: Float!, minCapacity: Float!, tableNumber: Float!): Boolean!
  deleteTable(id: String!): Boolean!
  Login(password: String!, email: String!): LoginResponse!
  Register(password: String!, email: String!, name: String!): Boolean!
  ResetPassword(password: String!, email: String!): Boolean!
  createUser(data: UserInput!): User!
  updateUser(password: String!, email: String!, name: String!): Boolean!
  deleteUser(id: String!): Boolean!
}

type Query {
  admin(id: String!): Admin!
  allAdmins: [Admin!]!
  item(id: String!): Item!
  allItems: [Item!]!
  staff(username: String!): Staff!
  allStaff: [Staff!]!
  table(id: String!): Table!
  allTables: [Table!]!
  user(id: String!): User!
  getEmail(email: String!): User!
  allUsers: [User!]!
  me: User!
  Me: String!
}

"""The Staff model"""
type Staff {
  id: ID!
  username: String!
  email: String!
  password: String!
}

input StaffInput {
  username: String!
  email: String!
  password: String!
}

"""The Table model"""
type Table {
  id: ID!
  tableNumber: Float!
  minCapacity: Float!
  maxCapacity: Float!
  description: String!
}

input TableInput {
  tableNumber: Float!
  minCapacity: Float!
  maxCapacity: Float!
  description: String!
}

"""The User model"""
type User {
  id: ID!
  name: String!
  email: String!
  password: String!
}

input UserInput {
  name: String!
  email: String!
  password: String!
}
